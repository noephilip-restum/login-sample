{"ast":null,"code":"import { get } from './api';\nexport default function Validate(state, value, type) {\n  let error = {};\n\n  if (type === 'sign-up') {\n    if (!value.name) {\n      error.name = 'Name is required';\n    }\n\n    if (!value.email) {\n      error.email = 'Email Address is required';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(value.email)) {\n      error.email = 'Email address is invalid';\n    }\n\n    if (!value.password) {\n      error.password = 'Password is required';\n    } else if (value.password.length < 10) {\n      error.password = 'Password needs to be more than 10 characters';\n    }\n\n    get('/users').then(res => res.data.map(user => {\n      if (user.email === value.email) {\n        error.email = 'Email is already exist';\n      }\n\n      return null;\n    }));\n  }\n\n  if (type === 'sign-in') {\n    if (!value.email) {\n      error.email = 'Email Address is required';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(value.email)) {\n      error.email = 'Email address is invalid';\n    }\n\n    if (!value.password) {\n      error.password = 'Password is required';\n    }\n  }\n\n  return error;\n}","map":{"version":3,"sources":["/home/bs94/Desktop/login-sample/Client/src/utils/validate.js"],"names":["get","Validate","state","value","type","error","name","email","test","password","length","then","res","data","map","user"],"mappings":"AAAA,SAASA,GAAT,QAAoB,OAApB;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyBC,KAAzB,EAAgCC,IAAhC,EAAsC;AACpD,MAAIC,KAAK,GAAG,EAAZ;;AAEA,MAAID,IAAI,KAAK,SAAb,EAAwB;AACvB,QAAI,CAACD,KAAK,CAACG,IAAX,EAAiB;AAChBD,MAAAA,KAAK,CAACC,IAAN,GAAa,kBAAb;AACA;;AAED,QAAI,CAACH,KAAK,CAACI,KAAX,EAAkB;AACjBF,MAAAA,KAAK,CAACE,KAAN,GAAc,2BAAd;AACA,KAFD,MAEO,IAAI,CAAC,eAAeC,IAAf,CAAoBL,KAAK,CAACI,KAA1B,CAAL,EAAuC;AAC7CF,MAAAA,KAAK,CAACE,KAAN,GAAc,0BAAd;AACA;;AAED,QAAI,CAACJ,KAAK,CAACM,QAAX,EAAqB;AACpBJ,MAAAA,KAAK,CAACI,QAAN,GAAiB,sBAAjB;AACA,KAFD,MAEO,IAAIN,KAAK,CAACM,QAAN,CAAeC,MAAf,GAAwB,EAA5B,EAAgC;AACtCL,MAAAA,KAAK,CAACI,QAAN,GAAiB,8CAAjB;AACA;;AAEDT,IAAAA,GAAG,CAAC,QAAD,CAAH,CAAcW,IAAd,CAAmBC,GAAG,IACrBA,GAAG,CAACC,IAAJ,CAASC,GAAT,CAAaC,IAAI,IAAI;AACpB,UAAIA,IAAI,CAACR,KAAL,KAAeJ,KAAK,CAACI,KAAzB,EAAgC;AAC/BF,QAAAA,KAAK,CAACE,KAAN,GAAc,wBAAd;AACA;;AACD,aAAO,IAAP;AACA,KALD,CADD;AAQA;;AAED,MAAIH,IAAI,KAAK,SAAb,EAAwB;AACvB,QAAI,CAACD,KAAK,CAACI,KAAX,EAAkB;AACjBF,MAAAA,KAAK,CAACE,KAAN,GAAc,2BAAd;AACA,KAFD,MAEO,IAAI,CAAC,eAAeC,IAAf,CAAoBL,KAAK,CAACI,KAA1B,CAAL,EAAuC;AAC7CF,MAAAA,KAAK,CAACE,KAAN,GAAc,0BAAd;AACA;;AAED,QAAI,CAACJ,KAAK,CAACM,QAAX,EAAqB;AACpBJ,MAAAA,KAAK,CAACI,QAAN,GAAiB,sBAAjB;AACA;AACD;;AAED,SAAOJ,KAAP;AACA","sourcesContent":["import { get } from './api';\n\nexport default function Validate(state, value, type) {\n\tlet error = {};\n\n\tif (type === 'sign-up') {\n\t\tif (!value.name) {\n\t\t\terror.name = 'Name is required';\n\t\t}\n\n\t\tif (!value.email) {\n\t\t\terror.email = 'Email Address is required';\n\t\t} else if (!/\\S+@\\S+\\.\\S+/.test(value.email)) {\n\t\t\terror.email = 'Email address is invalid';\n\t\t}\n\n\t\tif (!value.password) {\n\t\t\terror.password = 'Password is required';\n\t\t} else if (value.password.length < 10) {\n\t\t\terror.password = 'Password needs to be more than 10 characters';\n\t\t}\n\n\t\tget('/users').then(res =>\n\t\t\tres.data.map(user => {\n\t\t\t\tif (user.email === value.email) {\n\t\t\t\t\terror.email = 'Email is already exist';\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t})\n\t\t);\n\t}\n\n\tif (type === 'sign-in') {\n\t\tif (!value.email) {\n\t\t\terror.email = 'Email Address is required';\n\t\t} else if (!/\\S+@\\S+\\.\\S+/.test(value.email)) {\n\t\t\terror.email = 'Email address is invalid';\n\t\t}\n\n\t\tif (!value.password) {\n\t\t\terror.password = 'Password is required';\n\t\t}\n\t}\n\n\treturn error;\n}\n"]},"metadata":{},"sourceType":"module"}