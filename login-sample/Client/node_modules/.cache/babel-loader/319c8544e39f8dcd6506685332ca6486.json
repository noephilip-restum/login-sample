{"ast":null,"code":"var _jsxFileName = \"/home/bs94/Desktop/login-sample/Client/src/components/landing_pages/signin_form.js\";\nimport React, { useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Context } from '../../contexts';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport Login from './login';\nimport Validate from '../../utils/validate';\nimport { post } from '../../utils/api';\nexport default function SignInForm({\n  history\n}) {\n  const {\n    stateAccount,\n    handleAccount,\n    stateSignIn,\n    dispatchSignIn,\n    signInFunction,\n    dispatchAccount\n  } = useContext(Context);\n  console.group(stateSignIn); // const error = Validate(stateSignIn, 'sign-in');\n  // const handleSubmit = e => {\n  // \te.preventDefault();\n  // \tsetValidate({\n  // \t\t...validate,\n  // \t\terrors: error,\n  // \t\tisLoading: true\n  // \t});\n  // \tif (Object.keys(error).length === 0) {\n  // \t\tsetTimeout(() => {\n  // \t\t\tpost('/login', user)\n  // \t\t\t\t.then(res => {\n  // \t\t\t\t\thandleAccount({\n  // \t\t\t\t\t\tis_authenticated: res.data.accessToken,\n  // \t\t\t\t\t\tdb_profile: user\n  // \t\t\t\t\t});\n  // \t\t\t\t\tlocalStorage.setItem('notification', 'Successfully Signed In!');\n  // \t\t\t\t\thistory.push('/main-page');\n  // \t\t\t\t})\n  // \t\t\t\t.catch(error => {\n  // \t\t\t\t\tNotificationManager.error(error.response.data);\n  // \t\t\t\t\tsetValidate(initialValidateState);\n  // \t\t\t\t});\n  // \t\t}, 1000);\n  // \t} else {\n  // \t\tsetValidate({\n  // \t\t\t...validate,\n  // \t\t\terrors: error,\n  // \t\t\tisLoading: false\n  // \t\t});\n  // \t}\n  // };\n\n  return React.createElement(Login, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(NotificationContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"FormCenter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"FormFields\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"FormField\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"FormField__Label\",\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"E-Mail Address\"), React.createElement(\"input\", {\n    type: \"text\",\n    id: \"email\",\n    className: \"FormField__Input\",\n    placeholder: \"Enter your email\",\n    name: \"email\",\n    value: stateSignIn.email,\n    onChange: e => {\n      dispatchAccount({\n        type: 'FIELD',\n        fieldName: 'email',\n        payload: e.currentTarget.value\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(\"small\", {\n    style: {\n      color: 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, stateSignIn.errors.email)), React.createElement(\"div\", {\n    className: \"FormField\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"FormField__Button mr-20\",\n    style: {\n      marginRight: '20px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, stateSignIn.isLoading ? 'Loading ...' : 'Sign In'), ' ', React.createElement(Link, {\n    to: \"/\",\n    className: \"FormField__Link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Create an account\")))));\n}","map":{"version":3,"sources":["/home/bs94/Desktop/login-sample/Client/src/components/landing_pages/signin_form.js"],"names":["React","useState","useContext","Link","Context","NotificationContainer","NotificationManager","Login","Validate","post","SignInForm","history","stateAccount","handleAccount","stateSignIn","dispatchSignIn","signInFunction","dispatchAccount","console","group","email","e","type","fieldName","payload","currentTarget","value","color","errors","marginRight","isLoading"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SACCC,qBADD,EAECC,mBAFD,QAGO,qBAHP;AAKA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,SAASC,IAAT,QAAqB,iBAArB;AAEA,eAAe,SAASC,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAAiC;AAC/C,QAAM;AACLC,IAAAA,YADK;AAELC,IAAAA,aAFK;AAGLC,IAAAA,WAHK;AAILC,IAAAA,cAJK;AAKLC,IAAAA,cALK;AAMLC,IAAAA;AANK,MAOFf,UAAU,CAACE,OAAD,CAPd;AASAc,EAAAA,OAAO,CAACC,KAAR,CAAcL,WAAd,EAV+C,CAW/C;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SACC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAO,IAAA,SAAS,EAAC,kBAAjB;AAAoC,IAAA,OAAO,EAAC,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD,EAIC;AACC,IAAA,IAAI,EAAC,MADN;AAEC,IAAA,EAAE,EAAC,OAFJ;AAGC,IAAA,SAAS,EAAC,kBAHX;AAIC,IAAA,WAAW,EAAC,kBAJb;AAKC,IAAA,IAAI,EAAC,OALN;AAMC,IAAA,KAAK,EAAEA,WAAW,CAACM,KANpB;AAOC,IAAA,QAAQ,EAAEC,CAAC,IAAI;AACdJ,MAAAA,eAAe,CAAC;AACfK,QAAAA,IAAI,EAAE,OADS;AAEfC,QAAAA,SAAS,EAAE,OAFI;AAGfC,QAAAA,OAAO,EAAEH,CAAC,CAACI,aAAF,CAAgBC;AAHV,OAAD,CAAf;AAKA,KAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJD,EAmBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBD,EAoBC;AAAO,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCb,WAAW,CAACc,MAAZ,CAAmBR,KAApD,CApBD,CADD,EA2CC;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AACC,IAAA,SAAS,EAAC,yBADX;AAEC,IAAA,KAAK,EAAE;AAAES,MAAAA,WAAW,EAAE;AAAf,KAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIEf,WAAW,CAACgB,SAAZ,GAAwB,aAAxB,GAAwC,SAJ1C,CADD,EAMW,GANX,EAOC,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAa,IAAA,SAAS,EAAC,iBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAPD,CA3CD,CADD,CAFD,CADD;AA8DA","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Context } from '../../contexts';\nimport {\n\tNotificationContainer,\n\tNotificationManager\n} from 'react-notifications';\n\nimport Login from './login';\nimport Validate from '../../utils/validate';\nimport { post } from '../../utils/api';\n\nexport default function SignInForm({ history }) {\n\tconst {\n\t\tstateAccount,\n\t\thandleAccount,\n\t\tstateSignIn,\n\t\tdispatchSignIn,\n\t\tsignInFunction,\n\t\tdispatchAccount\n\t} = useContext(Context);\n\n\tconsole.group(stateSignIn);\n\t// const error = Validate(stateSignIn, 'sign-in');\n\n\t// const handleSubmit = e => {\n\t// \te.preventDefault();\n\n\t// \tsetValidate({\n\t// \t\t...validate,\n\t// \t\terrors: error,\n\t// \t\tisLoading: true\n\t// \t});\n\n\t// \tif (Object.keys(error).length === 0) {\n\t// \t\tsetTimeout(() => {\n\t// \t\t\tpost('/login', user)\n\t// \t\t\t\t.then(res => {\n\t// \t\t\t\t\thandleAccount({\n\t// \t\t\t\t\t\tis_authenticated: res.data.accessToken,\n\t// \t\t\t\t\t\tdb_profile: user\n\t// \t\t\t\t\t});\n\t// \t\t\t\t\tlocalStorage.setItem('notification', 'Successfully Signed In!');\n\t// \t\t\t\t\thistory.push('/main-page');\n\t// \t\t\t\t})\n\t// \t\t\t\t.catch(error => {\n\t// \t\t\t\t\tNotificationManager.error(error.response.data);\n\t// \t\t\t\t\tsetValidate(initialValidateState);\n\t// \t\t\t\t});\n\t// \t\t}, 1000);\n\t// \t} else {\n\t// \t\tsetValidate({\n\t// \t\t\t...validate,\n\t// \t\t\terrors: error,\n\t// \t\t\tisLoading: false\n\t// \t\t});\n\t// \t}\n\t// };\n\n\treturn (\n\t\t<Login>\n\t\t\t<NotificationContainer />\n\t\t\t<div className=\"FormCenter\">\n\t\t\t\t<form className=\"FormFields\">\n\t\t\t\t\t<div className=\"FormField\">\n\t\t\t\t\t\t<label className=\"FormField__Label\" htmlFor=\"email\">\n\t\t\t\t\t\t\tE-Mail Address\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\tclassName=\"FormField__Input\"\n\t\t\t\t\t\t\tplaceholder=\"Enter your email\"\n\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\tvalue={stateSignIn.email}\n\t\t\t\t\t\t\tonChange={e => {\n\t\t\t\t\t\t\t\tdispatchAccount({\n\t\t\t\t\t\t\t\t\ttype: 'FIELD',\n\t\t\t\t\t\t\t\t\tfieldName: 'email',\n\t\t\t\t\t\t\t\t\tpayload: e.currentTarget.value\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<small style={{ color: 'red' }}>{stateSignIn.errors.email}</small>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{/* <div className=\"FormField\">\n\t\t\t\t\t\t<label className=\"FormField__Label\" htmlFor=\"password\">\n\t\t\t\t\t\t\tPassword\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\tclassName=\"FormField__Input\"\n\t\t\t\t\t\t\tplaceholder=\"Enter your password\"\n\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\tvalue={stateSignIn.password}\n\t\t\t\t\t\t\tonChange={signInFunction}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<small style={{ color: 'red' }}>\n\t\t\t\t\t\t\t{stateSignIn.errors.password}\n\t\t\t\t\t\t</small>\n\t\t\t\t\t</div> */}\n\n\t\t\t\t\t<div className=\"FormField\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"FormField__Button mr-20\"\n\t\t\t\t\t\t\tstyle={{ marginRight: '20px' }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{stateSignIn.isLoading ? 'Loading ...' : 'Sign In'}\n\t\t\t\t\t\t</button>{' '}\n\t\t\t\t\t\t<Link to=\"/\" className=\"FormField__Link\">\n\t\t\t\t\t\t\tCreate an account\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</Login>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}