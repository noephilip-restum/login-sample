{"ast":null,"code":"import { NotificationManager } from 'react-notifications';\nimport validate from '../../utils/validate';\nimport { post } from '../../utils/api';\nexport const handleInput = (e, dispatchSignIn) => {\n  const {\n    name,\n    value\n  } = e.target;\n  dispatchSignIn({\n    type: 'FIELD',\n    fieldName: name,\n    payload: value\n  });\n};\nexport const handleSubmit = (e, stateSignIn, dispatchSignIn, history, types) => {\n  e.preventDefault();\n  const errors = validate(stateSignIn, types);\n  dispatchSignIn({\n    type: 'VALIDATE',\n    payload: {\n      errors,\n      isLoading: true\n    }\n  });\n\n  if (Object.keys(errors).length === 0) {\n    setTimeout(() => {\n      post('/login', stateSignIn).then(res => {\n        localStorage.setItem('notification', 'Successfully Signed In!');\n        history.push('/main-page');\n      }).catch(error => {\n        NotificationManager.error(error.response.data);\n        dispatchSignIn({\n          type: 'VALIDATE',\n          payload: {\n            errors,\n            isLoading: false\n          }\n        });\n      });\n    }, 1000);\n  } else {\n    dispatchSignIn({\n      type: 'VALIDATE',\n      payload: {\n        errors,\n        isLoading: false\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/home/bs94/Desktop/login-sample/Client/src/contexts/functions/signin_functions.js"],"names":["NotificationManager","validate","post","handleInput","e","dispatchSignIn","name","value","target","type","fieldName","payload","handleSubmit","stateSignIn","history","types","preventDefault","errors","isLoading","Object","keys","length","setTimeout","then","res","localStorage","setItem","push","catch","error","response","data"],"mappings":"AAAA,SAASA,mBAAT,QAAoC,qBAApC;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,SAASC,IAAT,QAAqB,iBAArB;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,CAAD,EAAIC,cAAJ,KAAuB;AACjD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBH,CAAC,CAACI,MAA1B;AACAH,EAAAA,cAAc,CAAC;AAAEI,IAAAA,IAAI,EAAE,OAAR;AAAiBC,IAAAA,SAAS,EAAEJ,IAA5B;AAAkCK,IAAAA,OAAO,EAAEJ;AAA3C,GAAD,CAAd;AACA,CAHM;AAKP,OAAO,MAAMK,YAAY,GAAG,CAC3BR,CAD2B,EAE3BS,WAF2B,EAG3BR,cAH2B,EAI3BS,OAJ2B,EAK3BC,KAL2B,KAMvB;AACJX,EAAAA,CAAC,CAACY,cAAF;AAEA,QAAMC,MAAM,GAAGhB,QAAQ,CAACY,WAAD,EAAcE,KAAd,CAAvB;AAEAV,EAAAA,cAAc,CAAC;AAAEI,IAAAA,IAAI,EAAE,UAAR;AAAoBE,IAAAA,OAAO,EAAE;AAAEM,MAAAA,MAAF;AAAUC,MAAAA,SAAS,EAAE;AAArB;AAA7B,GAAD,CAAd;;AAEA,MAAIC,MAAM,CAACC,IAAP,CAAYH,MAAZ,EAAoBI,MAApB,KAA+B,CAAnC,EAAsC;AACrCC,IAAAA,UAAU,CAAC,MAAM;AAChBpB,MAAAA,IAAI,CAAC,QAAD,EAAWW,WAAX,CAAJ,CACEU,IADF,CACOC,GAAG,IAAI;AACZC,QAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqC,yBAArC;AACAZ,QAAAA,OAAO,CAACa,IAAR,CAAa,YAAb;AACA,OAJF,EAKEC,KALF,CAKQC,KAAK,IAAI;AACf7B,QAAAA,mBAAmB,CAAC6B,KAApB,CAA0BA,KAAK,CAACC,QAAN,CAAeC,IAAzC;AAEA1B,QAAAA,cAAc,CAAC;AACdI,UAAAA,IAAI,EAAE,UADQ;AAEdE,UAAAA,OAAO,EAAE;AAAEM,YAAAA,MAAF;AAAUC,YAAAA,SAAS,EAAE;AAArB;AAFK,SAAD,CAAd;AAIA,OAZF;AAaA,KAdS,EAcP,IAdO,CAAV;AAeA,GAhBD,MAgBO;AACNb,IAAAA,cAAc,CAAC;AAAEI,MAAAA,IAAI,EAAE,UAAR;AAAoBE,MAAAA,OAAO,EAAE;AAAEM,QAAAA,MAAF;AAAUC,QAAAA,SAAS,EAAE;AAArB;AAA7B,KAAD,CAAd;AACA;AACD,CAhCM","sourcesContent":["import { NotificationManager } from 'react-notifications';\nimport validate from '../../utils/validate';\nimport { post } from '../../utils/api';\n\nexport const handleInput = (e, dispatchSignIn) => {\n\tconst { name, value } = e.target;\n\tdispatchSignIn({ type: 'FIELD', fieldName: name, payload: value });\n};\n\nexport const handleSubmit = (\n\te,\n\tstateSignIn,\n\tdispatchSignIn,\n\thistory,\n\ttypes\n) => {\n\te.preventDefault();\n\n\tconst errors = validate(stateSignIn, types);\n\n\tdispatchSignIn({ type: 'VALIDATE', payload: { errors, isLoading: true } });\n\n\tif (Object.keys(errors).length === 0) {\n\t\tsetTimeout(() => {\n\t\t\tpost('/login', stateSignIn)\n\t\t\t\t.then(res => {\n\t\t\t\t\tlocalStorage.setItem('notification', 'Successfully Signed In!');\n\t\t\t\t\thistory.push('/main-page');\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\tNotificationManager.error(error.response.data);\n\n\t\t\t\t\tdispatchSignIn({\n\t\t\t\t\t\ttype: 'VALIDATE',\n\t\t\t\t\t\tpayload: { errors, isLoading: false }\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t}, 1000);\n\t} else {\n\t\tdispatchSignIn({ type: 'VALIDATE', payload: { errors, isLoading: false } });\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}