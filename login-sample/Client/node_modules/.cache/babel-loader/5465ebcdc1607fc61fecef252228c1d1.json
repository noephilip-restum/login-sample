{"ast":null,"code":"export default function Validate(state, value, type) {\n  let error = {};\n\n  if (!value.name) {\n    error.name = 'Name is required';\n  }\n\n  if (!value.email) {\n    error.email = 'Email Address is required';\n  } else if (!/\\S+@\\S+\\.\\S+/.test(value.email)) {\n    error.email = 'Email address is invalid';\n  }\n\n  if (!value.password) {\n    error.password = 'Password is required';\n  } else if (value.password.length < 10) {\n    error.password = 'Password needs to be more than 10 characters';\n  }\n\n  if (type === 'signup') {\n    data.map(user => {\n      if (user.email === values.email) {\n        errors.email = 'Email is already exist';\n      }\n\n      if (user.username === values.username) {\n        errors.username = 'Username is already exist';\n      }\n\n      return null;\n    });\n  }\n\n  return error;\n}","map":{"version":3,"sources":["/home/bs94/Desktop/login-sample/src/tools/Validate.js"],"names":["Validate","state","value","type","error","name","email","test","password","length","data","map","user","values","errors","username"],"mappings":"AAAA,eAAe,SAASA,QAAT,CAAkBC,KAAlB,EAAyBC,KAAzB,EAAgCC,IAAhC,EAAsC;AACpD,MAAIC,KAAK,GAAG,EAAZ;;AACA,MAAI,CAACF,KAAK,CAACG,IAAX,EAAiB;AAChBD,IAAAA,KAAK,CAACC,IAAN,GAAa,kBAAb;AACA;;AAED,MAAI,CAACH,KAAK,CAACI,KAAX,EAAkB;AACjBF,IAAAA,KAAK,CAACE,KAAN,GAAc,2BAAd;AACA,GAFD,MAEO,IAAI,CAAC,eAAeC,IAAf,CAAoBL,KAAK,CAACI,KAA1B,CAAL,EAAuC;AAC7CF,IAAAA,KAAK,CAACE,KAAN,GAAc,0BAAd;AACA;;AAED,MAAI,CAACJ,KAAK,CAACM,QAAX,EAAqB;AACpBJ,IAAAA,KAAK,CAACI,QAAN,GAAiB,sBAAjB;AACA,GAFD,MAEO,IAAIN,KAAK,CAACM,QAAN,CAAeC,MAAf,GAAwB,EAA5B,EAAgC;AACtCL,IAAAA,KAAK,CAACI,QAAN,GAAiB,8CAAjB;AACA;;AACD,MAAIL,IAAI,KAAK,QAAb,EAAuB;AACtBO,IAAAA,IAAI,CAACC,GAAL,CAASC,IAAI,IAAI;AAChB,UAAIA,IAAI,CAACN,KAAL,KAAeO,MAAM,CAACP,KAA1B,EAAiC;AAChCQ,QAAAA,MAAM,CAACR,KAAP,GAAe,wBAAf;AACA;;AACD,UAAIM,IAAI,CAACG,QAAL,KAAkBF,MAAM,CAACE,QAA7B,EAAuC;AACtCD,QAAAA,MAAM,CAACC,QAAP,GAAkB,2BAAlB;AACA;;AACD,aAAO,IAAP;AACA,KARD;AASA;;AAED,SAAOX,KAAP;AACA","sourcesContent":["export default function Validate(state, value, type) {\n\tlet error = {};\n\tif (!value.name) {\n\t\terror.name = 'Name is required';\n\t}\n\n\tif (!value.email) {\n\t\terror.email = 'Email Address is required';\n\t} else if (!/\\S+@\\S+\\.\\S+/.test(value.email)) {\n\t\terror.email = 'Email address is invalid';\n\t}\n\n\tif (!value.password) {\n\t\terror.password = 'Password is required';\n\t} else if (value.password.length < 10) {\n\t\terror.password = 'Password needs to be more than 10 characters';\n\t}\n\tif (type === 'signup') {\n\t\tdata.map(user => {\n\t\t\tif (user.email === values.email) {\n\t\t\t\terrors.email = 'Email is already exist';\n\t\t\t}\n\t\t\tif (user.username === values.username) {\n\t\t\t\terrors.username = 'Username is already exist';\n\t\t\t}\n\t\t\treturn null;\n\t\t});\n\t}\n\n\treturn error;\n}\n"]},"metadata":{},"sourceType":"module"}